server:
  port: 8083

spring:
  application:
    name: USER-SERVICE
  
  main:
    allow-bean-definition-overriding: true
  
  datasource:
    url: ${DB_URL:jdbc:mysql://100.122.144.43:3306/food_app}
    username: ${DB_USERNAME:teamuser}
    password: ${DB_PASSWORD:password123}
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
            loggerLevel: basic
          ORDER-SERVICE:
            connectTimeout: 5000
            readTimeout: 15000
            loggerLevel: full
          RESTAURANT-SERVICE:
            connectTimeout: 5000
            readTimeout: 10000
            loggerLevel: basic
          PAYMENT-SERVICE:
            connectTimeout: 5000
            readTimeout: 20000
            loggerLevel: full
          NOTIFICATION-SERVICE:
            connectTimeout: 3000
            readTimeout: 8000
            loggerLevel: basic
          DELIVERY-SERVICE:
            connectTimeout: 5000
            readTimeout: 12000
            loggerLevel: basic
      compression:
        request:
          enabled: true
        response:
          enabled: true
    loadbalancer:
      ribbon:
        enabled: false
    config:
      enabled: false
      
  config:
    import: optional:configserver:http://localhost:8888
  
  # Email Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: hungrycheetah62@gmail.com
    password: feat seix sqbb lvhz
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            trust: smtp.gmail.com
  
  # ActiveMQ Configuration
  
  activemq:
    broker-url: tcp://localhost:61616
    user: Deepak
    password: Deepak123
    pool:
      enabled: true
      max-connections: 50
  
  # MongoDB Configuration
  data:
    mongodb:
      uri: mongodb://localhost:27017/food_app_users

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true
  instance:
    hostname: ${HOSTNAME:localhost}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: ${BUILD_VERSION:1.0.0}
      environment: ${ENVIRONMENT:development}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    jms:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.foodapp.user: ${LOG_LEVEL:DEBUG}
    org.springframework.cloud.openfeign: DEBUG
    feign.Logger: DEBUG
    org.springframework.security: ${SECURITY_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:34510220d4bf1609c88acb0256b07a2e4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

# Application specific configurations
app:
  security:
    cors:
      allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4200}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
  
  email:
    enabled: ${EMAIL_ENABLED:false}
    from: ${EMAIL_FROM:noreply@foodapp.com}
    provider: ${EMAIL_PROVIDER:mock}
  
  sms:
    enabled: ${SMS_ENABLED:false}
    provider: ${SMS_PROVIDER:mock}
    
  user:
    registration:
      email-verification-required: ${EMAIL_VERIFICATION_REQUIRED:true}
      phone-verification-required: ${PHONE_VERIFICATION_REQUIRED:false}
      auto-approve: ${AUTO_APPROVE_USERS:true}

# Feign client configurations
feign:
  compression:
    request:
      enabled: true
    response:
      enabled: true
  hystrix:
    enabled: true